import{RawEventQueue}from"../raw";import{VectorOps}from"../math";export var ActiveEvents;!function(r){r[r.NONE=0]="NONE",r[r.COLLISION_EVENTS=1]="COLLISION_EVENTS",r[r.CONTACT_FORCE_EVENTS=2]="CONTACT_FORCE_EVENTS"}(ActiveEvents||(ActiveEvents={}));export class TempContactForceEvent{free(){this.raw&&this.raw.free(),this.raw=void 0}collider1(){return this.raw.collider1()}collider2(){return this.raw.collider2()}totalForce(){return VectorOps.fromRaw(this.raw.total_force())}totalForceMagnitude(){return this.raw.total_force_magnitude()}maxForceDirection(){return VectorOps.fromRaw(this.raw.max_force_direction())}maxForceMagnitude(){return this.raw.max_force_magnitude()}}export class EventQueue{constructor(r,e){this.raw=e||new RawEventQueue(r)}free(){this.raw&&this.raw.free(),this.raw=void 0}drainCollisionEvents(r){this.raw.drainCollisionEvents(r)}drainContactForceEvents(r){let e=new TempContactForceEvent;this.raw.drainContactForceEvents((t=>{e.raw=t,r(e),e.free()}))}clear(){this.raw.clear()}}