import{RawPidController}from"../raw";import{RotationOps,VectorOps}from"../math";export var PidAxesMask;!function(r){r[r.None=0]="None",r[r.LinX=1]="LinX",r[r.LinY=2]="LinY",r[r.LinZ=4]="LinZ",r[r.AngX=8]="AngX",r[r.AngY=16]="AngY",r[r.AngZ=32]="AngZ",r[r.AllLin=7]="AllLin",r[r.AllAng=56]="AllAng",r[r.All=63]="All"}(PidAxesMask||(PidAxesMask={}));export class PidController{constructor(r,t,e,a,i,s){this.params=r,this.bodies=t,this.raw=new RawPidController(e,a,i,s)}free(){this.raw&&this.raw.free(),this.raw=void 0}setKp(r,t){this.raw.set_kp(r,t)}setKi(r,t){this.raw.set_kp(r,t)}setKd(r,t){this.raw.set_kp(r,t)}setAxes(r){this.raw.set_axes_mask(r)}resetIntegrals(){this.raw.reset_integrals()}applyLinearCorrection(r,t,e){let a=VectorOps.intoRaw(t),i=VectorOps.intoRaw(e);this.raw.apply_linear_correction(this.params.dt,this.bodies.raw,r.handle,a,i),a.free(),i.free()}applyAngularCorrection(r,t,e){let a=RotationOps.intoRaw(t),i=VectorOps.intoRaw(e);this.raw.apply_angular_correction(this.params.dt,this.bodies.raw,r.handle,a,i),a.free(),i.free()}linearCorrection(r,t,e){let a=VectorOps.intoRaw(t),i=VectorOps.intoRaw(e),s=this.raw.linear_correction(this.params.dt,this.bodies.raw,r.handle,a,i);return a.free(),i.free(),VectorOps.fromRaw(s)}angularCorrection(r,t,e){let a=RotationOps.intoRaw(t),i=VectorOps.intoRaw(e),s=this.raw.angular_correction(this.params.dt,this.bodies.raw,r.handle,a,i);return a.free(),i.free(),VectorOps.fromRaw(s)}}