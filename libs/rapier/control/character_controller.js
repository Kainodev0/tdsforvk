import{RawKinematicCharacterController,RawCharacterCollision}from"../raw";import{VectorOps}from"../math";export class CharacterCollision{}export class KinematicCharacterController{constructor(e,t,r,a,s){this.params=t,this.bodies=r,this.colliders=a,this.queries=s,this.raw=new RawKinematicCharacterController(e),this.rawCharacterCollision=new RawCharacterCollision,this._applyImpulsesToDynamicBodies=!1,this._characterMass=null}free(){this.raw&&(this.raw.free(),this.rawCharacterCollision.free()),this.raw=void 0,this.rawCharacterCollision=void 0}up(){return this.raw.up()}setUp(e){let t=VectorOps.intoRaw(e);return this.raw.setUp(t)}applyImpulsesToDynamicBodies(){return this._applyImpulsesToDynamicBodies}setApplyImpulsesToDynamicBodies(e){this._applyImpulsesToDynamicBodies=e}characterMass(){return this._characterMass}setCharacterMass(e){this._characterMass=e}offset(){return this.raw.offset()}setOffset(e){this.raw.setOffset(e)}normalNudgeFactor(){return this.raw.normalNudgeFactor()}setNormalNudgeFactor(e){this.raw.setNormalNudgeFactor(e)}slideEnabled(){return this.raw.slideEnabled()}setSlideEnabled(e){this.raw.setSlideEnabled(e)}autostepMaxHeight(){return this.raw.autostepMaxHeight()}autostepMinWidth(){return this.raw.autostepMinWidth()}autostepIncludesDynamicBodies(){return this.raw.autostepIncludesDynamicBodies()}autostepEnabled(){return this.raw.autostepEnabled()}enableAutostep(e,t,r){this.raw.enableAutostep(e,t,r)}disableAutostep(){return this.raw.disableAutostep()}maxSlopeClimbAngle(){return this.raw.maxSlopeClimbAngle()}setMaxSlopeClimbAngle(e){this.raw.setMaxSlopeClimbAngle(e)}minSlopeSlideAngle(){return this.raw.minSlopeSlideAngle()}setMinSlopeSlideAngle(e){this.raw.setMinSlopeSlideAngle(e)}snapToGroundDistance(){return this.raw.snapToGroundDistance()}enableSnapToGround(e){this.raw.enableSnapToGround(e)}disableSnapToGround(){this.raw.disableSnapToGround()}snapToGroundEnabled(){return this.raw.snapToGroundEnabled()}computeColliderMovement(e,t,r,a,s){let i=VectorOps.intoRaw(t);this.raw.computeColliderMovement(this.params.dt,this.bodies.raw,this.colliders.raw,this.queries.raw,e.handle,i,this._applyImpulsesToDynamicBodies,this._characterMass,r,a,this.colliders.castClosure(s)),i.free()}computedMovement(){return VectorOps.fromRaw(this.raw.computedMovement())}computedGrounded(){return this.raw.computedGrounded()}numComputedCollisions(){return this.raw.numComputedCollisions()}computedCollision(e,t){if(this.raw.computedCollision(e,this.rawCharacterCollision)){let e=this.rawCharacterCollision;return(t=null!=t?t:new CharacterCollision).translationDeltaApplied=VectorOps.fromRaw(e.translationDeltaApplied()),t.translationDeltaRemaining=VectorOps.fromRaw(e.translationDeltaRemaining()),t.toi=e.toi(),t.witness1=VectorOps.fromRaw(e.worldWitness1()),t.witness2=VectorOps.fromRaw(e.worldWitness2()),t.normal1=VectorOps.fromRaw(e.worldNormal1()),t.normal2=VectorOps.fromRaw(e.worldNormal2()),t.collider=this.colliders.get(e.handle()),t}return null}}