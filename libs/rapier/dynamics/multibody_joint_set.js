import{RawMultibodyJointSet}from"../raw";import{Coarena}from"../coarena";import{MultibodyJoint}from"./multibody_joint";export class MultibodyJointSet{free(){this.raw&&this.raw.free(),this.raw=void 0,this.map&&this.map.clear(),this.map=void 0}constructor(t){this.raw=t||new RawMultibodyJointSet,this.map=new Coarena,t&&t.forEachJointHandle((t=>{this.map.set(t,MultibodyJoint.newTyped(this.raw,t))}))}createJoint(t,e,i,o){const a=t.intoRaw(),r=this.raw.createJoint(a,e,i,o);a.free();let n=MultibodyJoint.newTyped(this.raw,r);return this.map.set(r,n),n}remove(t,e){this.raw.remove(t,e),this.map.delete(t)}unmap(t){this.map.delete(t)}len(){return this.map.len()}contains(t){return null!=this.get(t)}get(t){return this.map.get(t)}forEach(t){this.map.forEach(t)}forEachJointHandleAttachedToRigidBody(t,e){this.raw.forEachJointAttachedToRigidBody(t,e)}getAll(){return this.map.getAll()}}