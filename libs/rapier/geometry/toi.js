import{VectorOps}from"../math";export class ShapeCastHit{constructor(t,r,e,s,o){this.time_of_impact=t,this.witness1=r,this.witness2=e,this.normal1=s,this.normal2=o}static fromRaw(t,r){if(!r)return null;const e=new ShapeCastHit(r.time_of_impact(),VectorOps.fromRaw(r.witness1()),VectorOps.fromRaw(r.witness2()),VectorOps.fromRaw(r.normal1()),VectorOps.fromRaw(r.normal2()));return r.free(),e}}export class ColliderShapeCastHit extends ShapeCastHit{constructor(t,r,e,s,o,a){super(r,e,s,o,a),this.collider=t}static fromRaw(t,r){if(!r)return null;const e=new ColliderShapeCastHit(t.get(r.colliderHandle()),r.time_of_impact(),VectorOps.fromRaw(r.witness1()),VectorOps.fromRaw(r.witness2()),VectorOps.fromRaw(r.normal1()),VectorOps.fromRaw(r.normal2()));return r.free(),e}}