import{VectorOps,RotationOps}from"../math";import{RawShape,RawShapeType}from"../raw";import{ShapeContact}from"./contact";import{PointProjection}from"./point";import{RayIntersection}from"./ray";import{ShapeCastHit}from"./toi";export class Shape{static fromRaw(e,t){const i=e.coShapeType(t);let s,o,r,a,n,h,p;switch(i){case RawShapeType.Ball:return new Ball(e.coRadius(t));case RawShapeType.Cuboid:return s=e.coHalfExtents(t),new Cuboid(s.x,s.y,s.z);case RawShapeType.RoundCuboid:return s=e.coHalfExtents(t),o=e.coRoundRadius(t),new RoundCuboid(s.x,s.y,s.z,o);case RawShapeType.Capsule:return n=e.coHalfHeight(t),h=e.coRadius(t),new Capsule(n,h);case RawShapeType.Segment:return r=e.coVertices(t),new Segment(VectorOps.new(r[0],r[1],r[2]),VectorOps.new(r[3],r[4],r[5]));case RawShapeType.Polyline:return r=e.coVertices(t),a=e.coIndices(t),new Polyline(r,a);case RawShapeType.Triangle:return r=e.coVertices(t),new Triangle(VectorOps.new(r[0],r[1],r[2]),VectorOps.new(r[3],r[4],r[5]),VectorOps.new(r[6],r[7],r[8]));case RawShapeType.RoundTriangle:return r=e.coVertices(t),o=e.coRoundRadius(t),new RoundTriangle(VectorOps.new(r[0],r[1],r[2]),VectorOps.new(r[3],r[4],r[5]),VectorOps.new(r[6],r[7],r[8]),o);case RawShapeType.HalfSpace:return p=VectorOps.fromRaw(e.coHalfspaceNormal(t)),new HalfSpace(p);case RawShapeType.TriMesh:r=e.coVertices(t),a=e.coIndices(t);const c=e.coTriMeshFlags(t);return new TriMesh(r,a,c);case RawShapeType.HeightField:const R=e.coHeightfieldScale(t),l=e.coHeightfieldHeights(t),u=e.coHeightfieldNRows(t),d=e.coHeightfieldNCols(t),w=e.coHeightFieldFlags(t);return new Heightfield(u,d,l,R,w);case RawShapeType.ConvexPolyhedron:return r=e.coVertices(t),a=e.coIndices(t),new ConvexPolyhedron(r,a);case RawShapeType.RoundConvexPolyhedron:return r=e.coVertices(t),a=e.coIndices(t),o=e.coRoundRadius(t),new RoundConvexPolyhedron(r,a,o);case RawShapeType.Cylinder:return n=e.coHalfHeight(t),h=e.coRadius(t),new Cylinder(n,h);case RawShapeType.RoundCylinder:return n=e.coHalfHeight(t),h=e.coRadius(t),o=e.coRoundRadius(t),new RoundCylinder(n,h,o);case RawShapeType.Cone:return n=e.coHalfHeight(t),h=e.coRadius(t),new Cone(n,h);case RawShapeType.RoundCone:return n=e.coHalfHeight(t),h=e.coRadius(t),o=e.coRoundRadius(t),new RoundCone(n,h,o);default:throw new Error("unknown shape type: "+i)}}castShape(e,t,i,s,o,r,a,n,h,p){let c=VectorOps.intoRaw(e),R=RotationOps.intoRaw(t),l=VectorOps.intoRaw(i),u=VectorOps.intoRaw(o),d=RotationOps.intoRaw(r),w=VectorOps.intoRaw(a),f=this.intoRaw(),S=s.intoRaw(),y=ShapeCastHit.fromRaw(null,f.castShape(c,R,l,S,u,d,w,n,h,p));return c.free(),R.free(),l.free(),u.free(),d.free(),w.free(),f.free(),S.free(),y}intersectsShape(e,t,i,s,o){let r=VectorOps.intoRaw(e),a=RotationOps.intoRaw(t),n=VectorOps.intoRaw(s),h=RotationOps.intoRaw(o),p=this.intoRaw(),c=i.intoRaw(),R=p.intersectsShape(r,a,c,n,h);return r.free(),a.free(),n.free(),h.free(),p.free(),c.free(),R}contactShape(e,t,i,s,o,r){let a=VectorOps.intoRaw(e),n=RotationOps.intoRaw(t),h=VectorOps.intoRaw(s),p=RotationOps.intoRaw(o),c=this.intoRaw(),R=i.intoRaw(),l=ShapeContact.fromRaw(c.contactShape(a,n,R,h,p,r));return a.free(),n.free(),h.free(),p.free(),c.free(),R.free(),l}containsPoint(e,t,i){let s=VectorOps.intoRaw(e),o=RotationOps.intoRaw(t),r=VectorOps.intoRaw(i),a=this.intoRaw(),n=a.containsPoint(s,o,r);return s.free(),o.free(),r.free(),a.free(),n}projectPoint(e,t,i,s){let o=VectorOps.intoRaw(e),r=RotationOps.intoRaw(t),a=VectorOps.intoRaw(i),n=this.intoRaw(),h=PointProjection.fromRaw(n.projectPoint(o,r,a,s));return o.free(),r.free(),a.free(),n.free(),h}intersectsRay(e,t,i,s){let o=VectorOps.intoRaw(t),r=RotationOps.intoRaw(i),a=VectorOps.intoRaw(e.origin),n=VectorOps.intoRaw(e.dir),h=this.intoRaw(),p=h.intersectsRay(o,r,a,n,s);return o.free(),r.free(),a.free(),n.free(),h.free(),p}castRay(e,t,i,s,o){let r=VectorOps.intoRaw(t),a=RotationOps.intoRaw(i),n=VectorOps.intoRaw(e.origin),h=VectorOps.intoRaw(e.dir),p=this.intoRaw(),c=p.castRay(r,a,n,h,s,o);return r.free(),a.free(),n.free(),h.free(),p.free(),c}castRayAndGetNormal(e,t,i,s,o){let r=VectorOps.intoRaw(t),a=RotationOps.intoRaw(i),n=VectorOps.intoRaw(e.origin),h=VectorOps.intoRaw(e.dir),p=this.intoRaw(),c=RayIntersection.fromRaw(p.castRayAndGetNormal(r,a,n,h,s,o));return r.free(),a.free(),n.free(),h.free(),p.free(),c}}export var ShapeType;!function(e){e[e.Ball=0]="Ball",e[e.Cuboid=1]="Cuboid",e[e.Capsule=2]="Capsule",e[e.Segment=3]="Segment",e[e.Polyline=4]="Polyline",e[e.Triangle=5]="Triangle",e[e.TriMesh=6]="TriMesh",e[e.HeightField=7]="HeightField",e[e.ConvexPolyhedron=9]="ConvexPolyhedron",e[e.Cylinder=10]="Cylinder",e[e.Cone=11]="Cone",e[e.RoundCuboid=12]="RoundCuboid",e[e.RoundTriangle=13]="RoundTriangle",e[e.RoundCylinder=14]="RoundCylinder",e[e.RoundCone=15]="RoundCone",e[e.RoundConvexPolyhedron=16]="RoundConvexPolyhedron",e[e.HalfSpace=17]="HalfSpace"}(ShapeType||(ShapeType={}));export var HeightFieldFlags;!function(e){e[e.FIX_INTERNAL_EDGES=1]="FIX_INTERNAL_EDGES"}(HeightFieldFlags||(HeightFieldFlags={}));export var TriMeshFlags;!function(e){e[e.DELETE_BAD_TOPOLOGY_TRIANGLES=4]="DELETE_BAD_TOPOLOGY_TRIANGLES",e[e.ORIENTED=8]="ORIENTED",e[e.MERGE_DUPLICATE_VERTICES=16]="MERGE_DUPLICATE_VERTICES",e[e.DELETE_DEGENERATE_TRIANGLES=32]="DELETE_DEGENERATE_TRIANGLES",e[e.DELETE_DUPLICATE_TRIANGLES=64]="DELETE_DUPLICATE_TRIANGLES",e[e.FIX_INTERNAL_EDGES=152]="FIX_INTERNAL_EDGES"}(TriMeshFlags||(TriMeshFlags={}));export class Ball extends Shape{constructor(e){super(),this.type=ShapeType.Ball,this.radius=e}intoRaw(){return RawShape.ball(this.radius)}}export class HalfSpace extends Shape{constructor(e){super(),this.type=ShapeType.HalfSpace,this.normal=e}intoRaw(){let e=VectorOps.intoRaw(this.normal),t=RawShape.halfspace(e);return e.free(),t}}export class Cuboid extends Shape{constructor(e,t,i){super(),this.type=ShapeType.Cuboid,this.halfExtents=VectorOps.new(e,t,i)}intoRaw(){return RawShape.cuboid(this.halfExtents.x,this.halfExtents.y,this.halfExtents.z)}}export class RoundCuboid extends Shape{constructor(e,t,i,s){super(),this.type=ShapeType.RoundCuboid,this.halfExtents=VectorOps.new(e,t,i),this.borderRadius=s}intoRaw(){return RawShape.roundCuboid(this.halfExtents.x,this.halfExtents.y,this.halfExtents.z,this.borderRadius)}}export class Capsule extends Shape{constructor(e,t){super(),this.type=ShapeType.Capsule,this.halfHeight=e,this.radius=t}intoRaw(){return RawShape.capsule(this.halfHeight,this.radius)}}export class Segment extends Shape{constructor(e,t){super(),this.type=ShapeType.Segment,this.a=e,this.b=t}intoRaw(){let e=VectorOps.intoRaw(this.a),t=VectorOps.intoRaw(this.b),i=RawShape.segment(e,t);return e.free(),t.free(),i}}export class Triangle extends Shape{constructor(e,t,i){super(),this.type=ShapeType.Triangle,this.a=e,this.b=t,this.c=i}intoRaw(){let e=VectorOps.intoRaw(this.a),t=VectorOps.intoRaw(this.b),i=VectorOps.intoRaw(this.c),s=RawShape.triangle(e,t,i);return e.free(),t.free(),i.free(),s}}export class RoundTriangle extends Shape{constructor(e,t,i,s){super(),this.type=ShapeType.RoundTriangle,this.a=e,this.b=t,this.c=i,this.borderRadius=s}intoRaw(){let e=VectorOps.intoRaw(this.a),t=VectorOps.intoRaw(this.b),i=VectorOps.intoRaw(this.c),s=RawShape.roundTriangle(e,t,i,this.borderRadius);return e.free(),t.free(),i.free(),s}}export class Polyline extends Shape{constructor(e,t){super(),this.type=ShapeType.Polyline,this.vertices=e,this.indices=null!=t?t:new Uint32Array(0)}intoRaw(){return RawShape.polyline(this.vertices,this.indices)}}export class TriMesh extends Shape{constructor(e,t,i){super(),this.type=ShapeType.TriMesh,this.vertices=e,this.indices=t,this.flags=i}intoRaw(){return RawShape.trimesh(this.vertices,this.indices,this.flags)}}export class ConvexPolyhedron extends Shape{constructor(e,t){super(),this.type=ShapeType.ConvexPolyhedron,this.vertices=e,this.indices=t}intoRaw(){return this.indices?RawShape.convexMesh(this.vertices,this.indices):RawShape.convexHull(this.vertices)}}export class RoundConvexPolyhedron extends Shape{constructor(e,t,i){super(),this.type=ShapeType.RoundConvexPolyhedron,this.vertices=e,this.indices=t,this.borderRadius=i}intoRaw(){return this.indices?RawShape.roundConvexMesh(this.vertices,this.indices,this.borderRadius):RawShape.roundConvexHull(this.vertices,this.borderRadius)}}export class Heightfield extends Shape{constructor(e,t,i,s,o){super(),this.type=ShapeType.HeightField,this.nrows=e,this.ncols=t,this.heights=i,this.scale=s,this.flags=o}intoRaw(){let e=VectorOps.intoRaw(this.scale),t=RawShape.heightfield(this.nrows,this.ncols,this.heights,e,this.flags);return e.free(),t}}export class Cylinder extends Shape{constructor(e,t){super(),this.type=ShapeType.Cylinder,this.halfHeight=e,this.radius=t}intoRaw(){return RawShape.cylinder(this.halfHeight,this.radius)}}export class RoundCylinder extends Shape{constructor(e,t,i){super(),this.type=ShapeType.RoundCylinder,this.borderRadius=i,this.halfHeight=e,this.radius=t}intoRaw(){return RawShape.roundCylinder(this.halfHeight,this.radius,this.borderRadius)}}export class Cone extends Shape{constructor(e,t){super(),this.type=ShapeType.Cone,this.halfHeight=e,this.radius=t}intoRaw(){return RawShape.cone(this.halfHeight,this.radius)}}export class RoundCone extends Shape{constructor(e,t,i){super(),this.type=ShapeType.RoundCone,this.halfHeight=e,this.radius=t,this.borderRadius=i}intoRaw(){return RawShape.roundCone(this.halfHeight,this.radius,this.borderRadius)}}